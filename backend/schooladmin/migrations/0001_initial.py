# Generated by Django 5.2 on 2025-09-11 18:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academics', '0005_remove_subjectcontent_file_contentfile'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FeeStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('academic_year', models.CharField(max_length=9)),
                ('term', models.CharField(choices=[('First Term', 'First Term'), ('Second Term', 'Second Term'), ('Third Term', 'Third Term')], default='First Term', max_length=20)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('classes', models.ManyToManyField(related_name='fee_structures', to='academics.class')),
            ],
        ),
        migrations.CreateModel(
            name='GradingConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.CharField(max_length=9)),
                ('term', models.CharField(choices=[('First Term', 'First Term'), ('Second Term', 'Second Term'), ('Third Term', 'Third Term')], max_length=20)),
                ('attendance_percentage', models.PositiveIntegerField(help_text='Percentage weight for attendance (5-20%)')),
                ('assignment_percentage', models.PositiveIntegerField(help_text='Percentage weight for assignments (5-20%)')),
                ('test_percentage', models.PositiveIntegerField(help_text='Percentage weight for tests')),
                ('exam_percentage', models.PositiveIntegerField(help_text='Percentage weight for exams')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('copied_from', models.ForeignKey(blank=True, help_text='Original configuration this was copied from', null=True, on_delete=django.db.models.deletion.SET_NULL, to='schooladmin.gradingconfiguration')),
                ('created_by', models.ForeignKey(limit_choices_to={'role': 'admin'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-academic_year', 'term'],
            },
        ),
        migrations.CreateModel(
            name='GradeComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component_type', models.CharField(choices=[('attendance', 'Attendance'), ('assignment', 'Assignment'), ('test', 'Test'), ('exam', 'Exam')], max_length=20)),
                ('percentage_weight', models.PositiveIntegerField()),
                ('max_score', models.PositiveIntegerField(default=100, help_text='Maximum possible score for this component')),
                ('description', models.TextField(blank=True)),
                ('grading_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='schooladmin.gradingconfiguration')),
            ],
            options={
                'unique_together': {('grading_config', 'component_type')},
            },
        ),
        migrations.CreateModel(
            name='GradingScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Name for this grading scale (e.g., 'Standard Scale', 'Honors Scale')", max_length=100)),
                ('description', models.TextField(blank=True)),
                ('academic_year', models.CharField(blank=True, max_length=9)),
                ('term', models.CharField(blank=True, max_length=20)),
                ('a_min_score', models.PositiveIntegerField(default=90, help_text='Minimum score for grade A (e.g., 90%)')),
                ('b_min_score', models.PositiveIntegerField(default=80, help_text='Minimum score for grade B (e.g., 80%)')),
                ('c_min_score', models.PositiveIntegerField(default=70, help_text='Minimum score for grade C (e.g., 70%)')),
                ('d_min_score', models.PositiveIntegerField(default=60, help_text='Minimum score for grade D (e.g., 60%)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(limit_choices_to={'role': 'admin'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='gradingconfiguration',
            name='grading_scale',
            field=models.ForeignKey(help_text='Grading scale to use for letter grades', on_delete=django.db.models.deletion.CASCADE, to='schooladmin.gradingscale'),
        ),
        migrations.CreateModel(
            name='ConfigurationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('attendance_percentage', models.PositiveIntegerField()),
                ('assignment_percentage', models.PositiveIntegerField()),
                ('test_percentage', models.PositiveIntegerField()),
                ('exam_percentage', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(limit_choices_to={'role': 'admin'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('grading_scale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schooladmin.gradingscale')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StudentFeeRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('date_paid', models.DateTimeField(auto_now=True)),
                ('payment_status', models.CharField(choices=[('PAID', 'Paid'), ('PARTIAL', 'Partially Paid'), ('UNPAID', 'Unpaid')], default='UNPAID', max_length=10)),
                ('fee_structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schooladmin.feestructure')),
                ('student', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('is_present', models.BooleanField(default=False)),
                ('time_in', models.TimeField(blank=True, null=True)),
                ('time_out', models.TimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('class_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.classsession')),
                ('recorded_by', models.ForeignKey(limit_choices_to={'role__in': ['teacher', 'admin']}, on_delete=django.db.models.deletion.CASCADE, related_name='grading_attendance_recorded', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('student', 'class_session', 'date')},
            },
        ),
        migrations.CreateModel(
            name='GradeSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('assignment_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('test_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('exam_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('total_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('letter_grade', models.CharField(blank=True, max_length=2)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('is_final', models.BooleanField(default=False)),
                ('student', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.subject')),
                ('grading_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schooladmin.gradingconfiguration')),
            ],
            options={
                'ordering': ['-total_score'],
                'unique_together': {('student', 'subject', 'grading_config')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='gradingconfiguration',
            unique_together={('academic_year', 'term')},
        ),
        migrations.CreateModel(
            name='StudentGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=2, help_text='Actual score achieved', max_digits=5)),
                ('max_possible_score', models.PositiveIntegerField(help_text='Maximum score for this specific item')),
                ('date_entered', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schooladmin.gradecomponent')),
                ('entered_by', models.ForeignKey(limit_choices_to={'role__in': ['teacher', 'admin']}, on_delete=django.db.models.deletion.CASCADE, related_name='grades_entered', to=settings.AUTH_USER_MODEL)),
                ('grading_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schooladmin.gradingconfiguration')),
                ('related_content', models.ForeignKey(blank=True, help_text='Link to assignment/test if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, to='academics.subjectcontent')),
                ('student', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.subject')),
            ],
            options={
                'ordering': ['-date_entered'],
                'unique_together': {('student', 'component', 'subject', 'related_content')},
            },
        ),
    ]
